name: Cloud Native Project
on: [push]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      VERSION: ${{ github.sha }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: "Terraform Validate"
        working-directory: ./terraform
        run: terraform validate

      - name: "Terraform Plan"
        working-directory: ./terraform
        id: plan
        run: terraform plan -out=tfplan

      - name: "Terraform Apply"
        working-directory: ./terraform
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      - uses: azure/aks-set-context@v3
        with:
          resource-group: "sit722cnpart5actions"
          cluster-name: "sit722cnpart5actions"

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1

      - name: Get ACR Credentials
        id: get_acr_credentials
        run: |
          ACR_USERNAME=$(az acr credential show --name sit722cnpart5actions --query username -o tsv)
          ACR_PASSWORD=$(az acr credential show --name sit722cnpart5actions --query 'passwords[0].value' -o tsv)

          echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV

      - uses: azure/docker-login@v2
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build
        run: |
          ./scripts/build-image.sh

      - name: Push
        run: |
          ./scripts/push-image.sh

      - name: Deploy to Kubernetes
        run: |
          ./scripts/deploy.sh
